/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/


def app = [:]
app.application_id = "com.test.logoquiz"
app.version_name = "1.0.0"
app.version_code = 1
app.api_version = 19
app.app_name = "Logo Quiz"
ext.app = app

def build_versions = [:]
build_versions.min_sdk = 17
build_versions.target_sdk = 29
build_versions.compile_sdk = 29
build_versions.build_tools = "29.0.0"
ext.build_versions = build_versions

ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.5.0'
versions.arch_core = "2.0.1"
versions.atsl_core = "1.1.0"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_junit = "1.1.0"
versions.benchmark = "1.0.0-alpha02"
versions.constraint_layout = "1.1.3"
versions.core_ktx = "1.0.0"
versions.dagger = '2.24'
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.flowlayout = "1.10@aar"
versions.glide = "4.9.0"
versions.hamcrest = "1.3"
versions.gson = '2.8.5'
versions.junit = "4.12"
versions.kotlin = "1.3.40"  //31
versions.lifecycle = "2.2.0-alpha01"
versions.mockito = "2.28.2"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.28.2"
versions.mockito_kotlin = "2.1.0"
versions.navigation = "2.1.0-alpha04"
versions.okhttp = '4.2.0'
versions.paging = "2.1.0-rc01"
versions.retrofit = '2.6.1'
versions.retrofit_converts = '2.6.1'
versions.robolectric = "4.2"
versions.room = "2.1.0"
versions.rx_android = '2.1.1'
versions.rxkotlin = "2.4.0-RC3"
versions.support = "1.0.0"
versions.timber = "4.7.1"
versions.work = "2.1.0"
versions.play_auth = "17.1.0"
versions.play_services_location = "17.0.0"
versions.play_services_base = "17.0.0"
versions.libraries_places = "2.0.0"
versions.rx_location = '1.0.5'
versions.rx_permission = '0.10.2'
versions.view_pager2 = '1.0.0-beta02'
versions.rx_binding = '3.0.0'
versions.shimmer = '0.5.0'
versions.play_core = '1.6.0'
versions.fcm = "19.0.1"
versions.firebase_core = '17.0.1'
versions.google_service_plugin = '4.3.0'
versions.crashlytics_plugin = '1.30.0'
versions.crashlytics = '2.10.1'
versions.anko = '0.10.8'
versions.stetho = '1.5.1'
versions.markdown = '4.0.2'
versions.multidex = '2.0.1'
versions.webengage = '3.10.7'
versions.androidsvg = '1.4'
versions.apache_commons_collection = '4.4'
versions.exoplayer = '2.10.4'
versions.androidyoutubeplayer = '10.0.4'
versions.auto_dsl = '0.0.9'
versions.flex_box_layout = '1.1.1'
ext.versions = versions

def deps = [:]
deps.benchmark = "androidx.benchmark:benchmark:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

def anko = [:]
anko.commons = "org.jetbrains.anko:anko-commons:${versions.anko}"
anko.sdk = "org.jetbrains.anko:anko-sdk25:${versions.anko}"
anko.layout = "org.jetbrains.anko:anko-appcompat-v7:${versions.anko}"
anko.sdk_couroutines = "org.jetbrains.anko:anko-sdk25-coroutines:${versions.anko}"
anko.layout_coroutines = "org.jetbrains.anko:anko-coroutines:${versions.anko}"
anko.design = "org.jetbrains.anko:anko-design:${versions.anko}"
deps.anko = anko

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
support.view_pager2 = "androidx.viewpager2:viewpager2:$versions.view_pager2"
support.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit_converts"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit_converts"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
espresso.idling_resource = "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
mockito.mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.kotlin = kotlin

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def rx = [:]
rx.rxkotlin = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.rxlocation = "com.patloew.rxlocation:rxlocation:${versions.rx_location}"
rx.rx_permission = "com.github.tbruyelle:rxpermissions:${versions.rx_permission}"
rx.rx_binding = "com.jakewharton.rxbinding3:rxbinding:${versions.rx_binding}"
deps.rx = rx

deps.flowlayout = "org.apmem.tools:layouts:$versions.flowlayout"
deps.shimmer = "com.facebook.shimmer:shimmer:$versions.shimmer"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.okhttp = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.play_service = "com.google.android.gms:play-services-location:${versions.play_services_location}"
deps.crashlytics_plugin = "io.fabric.tools:gradle:${versions.crashlytics_plugin}"
deps.crashlytics = "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}"
deps.stetho = "com.facebook.stetho:stetho:${versions.stetho}"
deps.stetho_okhttp = "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"
deps.markdown = "io.noties.markwon:core:${versions.markdown}"
deps.webengage = "com.webengage:android-sdk:${versions.webengage}"
deps.androidsvg = "com.caverock:androidsvg:${versions.androidsvg}"
deps.apache_commons_collection = "org.apache.commons:commons-collections4:${versions.apache_commons_collection}"
deps.exoplayer = "com.google.android.exoplayer:exoplayer:${versions.exoplayer}"
deps.androidyoutubeplayer = "com.pierfrancescosoffritti.androidyoutubeplayer:core:${versions.androidyoutubeplayer}"
deps.auto_dsl = "com.juanchosaravia.autodsl:annotation:${versions.auto_dsl}"
deps.auto_dsl_processor = "com.juanchosaravia.autodsl:processor:${versions.auto_dsl}"
deps.flex_box_layout = "com.google.android:flexbox:${versions.flex_box_layout}"
ext.deps = deps

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def play = [:]
play.base = "com.google.android.gms:play-services-base:$versions.play_services_base"
play.places_libraries = "com.google.android.libraries.places:places-compat:$versions.libraries_places"
play.auth = "com.google.android.gms:play-services-auth-api-phone:$versions.play_auth"
play.core = "com.google.android.play:core:$versions.play_core"
play.fcm = "com.google.firebase:firebase-messaging:$versions.fcm"
play.firebase_core = "com.google.firebase:firebase-core:${versions.firebase_core}"
play.google_service_plugin = "com.google.gms:google-services:${versions.google_service_plugin}"
deps.play = play

ext.deps = deps


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'https://maven.fabric.io/public' }
    handler.maven { url "https://dl.bintray.com/juanchosaravia/autodsl" }
}

ext.addRepos = this.&addRepos